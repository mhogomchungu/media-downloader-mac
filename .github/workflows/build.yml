name: build

on:
  push:
    branches:
    - main
    tags-ignore:
    - '*'

env:
  QT5_VERSION:     "5.15.2"
  MINGW5_VERSION:  "win32_mingw81"
  MINGW5_PATH:     "mingw81_32"
  QT6_VERSION:     "6.6.2"
  MINGW6_VERSION:  "win64_mingw"
  MINGW6_PATH:     "mingw_64"
  BUILD_TYPE:      Release

jobs:
  myEvent:
    runs-on: windows-latest
    steps:
    -
      uses: actions/checkout@v4
      with:
         path: SiriKali
    -
      name: Install mingw
      uses: msys2/setup-msys2@v2
      with:
            install: mingw-w64-i686-gcc
            msystem: mingw32
            location: ${{github.workspace}}
    -
      name: update env for Qt5
      run: echo "${{github.workspace}}/msys64/mingw32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    -
      name: Check GCC version and path for Qt5
      run: |
          Write-Output (Get-Command c++.exe).Path
          c++.exe --version
    -
      name: Install Qt5
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT5_VERSION }}
        arch: ${{ env.MINGW5_VERSION }}
        dir: "${{github.workspace}}/qt5"
        install-deps: "true"
        host: 'windows'
        target: 'desktop'
    -
      name: Set Build time
      run: |

        $now = (Get-Date)

        $then = (Get-Date -Year 2024 -Month 5 -Day 3 -Hour 0 -Minute 0)

        echo "CURRENT_TIME=$($now.ToString())" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

        $All = (New-TimeSpan -start $then -end $now)

        $Days=$All.Days.ToString()
        $Hours=$All.Hours.ToString()
        $Minutes=$All.Minutes.ToString()

        if($Hours.Length -eq 1){ $Hours = "0" + $Hours }
        if($Minutes.Length -eq 1){ $Minutes = "0" + $Minutes }

        $Version=$Days+$Hours+$Minutes

        $Version=$Version.TrimStart("0")

        echo "GIT_VERSION_NUMBER=$Version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    -
      name: Configure CMake for Qt5
      env:
        CMAKE_PREFIX_PATH: "${{github.workspace}}/qt5/Qt/${{ env.QT5_VERSION }}"
        msystem: MINGW32
      run: cmake -DOUTPUT_BASE_NAME=SiriKaliQt5 -DLIBRARIES_LOCATION=${{github.workspace}}\SiriKali.git\ -DOUTPUT_PATH=${{github.workspace}}\ -DSOURCE_PATH=${{github.workspace}}\SiriKali\ -DCMAKE_VERBOSE_MAKEFILE=TRUE -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "CodeBlocks - MinGW Makefiles" -S ${{github.workspace}}/SiriKali/ -B ${{github.workspace}}/SiriKali/build5
    -
      name: Print installer script for Qt5
      run : get-content ${{github.workspace}}\MD\build5\sirikali_windows_installer_Qt5.iss
    -
      name: Update version.h for Qt5
      run: |
        $content = [System.IO.File]::ReadAllText("${{github.workspace}}\SiriKali\build5\version.h").Replace("git_tag",${{ env.GIT_VERSION_NUMBER }})
        [System.IO.File]::WriteAllText("${{github.workspace}}\MD\build5\version.h",$content )
    -
      name: Build Project for Qt5
      run: cmake --build ${{github.workspace}}/MD/build5
    -
      name: Prepare release date
      run: |
        $data = [System.IO.File]::ReadAllText("${{github.workspace}}\MD\build5\version.h")

        $versionInfoLines = $data.Split([Environment]::NewLine, [System.StringSplitOptions]::RemoveEmptyEntries)

        $versionInfoFirstLine = $versionInfoLines[0]

        $versionInfo = $versionInfoFirstLine.Split(" ",[System.StringSplitOptions]::RemoveEmptyEntries)[2]

        echo "BUILD_VERSION=$versionInfo" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    -
      name: Create SiriKali.git.zip
      run: |
        New-Item -ItemType Directory -Path ${{github.workspace}}\SiriKali.git
        New-Item -ItemType Directory -Path ${{github.workspace}}\SiriKali.git/local

        Copy-Item -Path ${{github.workspace}}\SiriKali\translations -Destination ${{github.workspace}}\SiriKali.git -Recurse
        Copy-Item -Path ${{github.workspace}}\SiriKali\build5\sirikali.exe -Destination ${{github.workspace}}\SiriKali.git

        Set-Location ${{github.workspace}}\SiriKali.git

        ${{github.workspace}}/qt5/Qt/${{ env.QT5_VERSION }}/${{ env.MINGW5_PATH }}/bin/windeployqt.exe ${{github.workspace}}\SiriKali.git\sirikali.exe

        $bb = ${{ env.BUILD_VERSION }}
        $bb = $bb.Trim()

        echo "$bb" | Out-File -FilePath ${{github.workspace}}\SiriKali.git\version_info.txt -Encoding utf8 -Append

        Compress-Archive -Path ${{github.workspace}}\SiriKali.git -DestinationPath ${{github.workspace}}\SiriKali.git.zip

        Remove-Item -Path ${{github.workspace}}\SiriKali.git\local

        Remove-Item -Path ${{github.workspace}}\SiriKali.git\version_info.txt
